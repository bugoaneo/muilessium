// @name Tags list
// @description Tags list component. Should be initialized.
// @requires FontAwesome
//
// @markup
//      <div class="mui-tags-list" aria-label="Tags list">
//          <div class="mui-tag-wrapper -icon" role="presentation"><i class="fa fa-tags" aria-hidden="true"></i></div>
//          <div class="mui-tag-wrapper"><a href="" class="mui-tag" aria-label="Search by tag nature">nature</a></div>
//          <div class="mui-tag-wrapper"><a href="" class="mui-tag" aria-label="Search by tag art">art</a></div>
//          <div class="mui-tag-wrapper"><a href="" class="mui-tag" aria-label="Search by tag photography">photography</a></div>
//          <div class="mui-tag-wrapper"><a href="" class="mui-tag" aria-label="Search by tag mountains">mountains</a></div>
//          <div class="mui-tag-wrapper"><a href="" class="mui-tag" aria-label="Search by tag sea">sea</a></div>
//      </div>


// @name Solid tags list
// @description Variation of the tags list component. Should be initialized too.
//
// @markup
//      <div class="mui-tags-list -solid" aria-label="Tags list">
//          <div class="mui-tag-wrapper"><a href="" class="mui-tag" aria-label="Search by tag nature">nature</a></div>
//          <div class="mui-tag-wrapper"><a href="" class="mui-tag" aria-label="Search by tag art">art</a></div>
//          <div class="mui-tag-wrapper"><a href="" class="mui-tag" aria-label="Search by tag photography">photography</a></div>
//          <div class="mui-tag-wrapper"><a href="" class="mui-tag" aria-label="Search by tag mountains">mountains</a></div>
//          <div class="mui-tag-wrapper"><a href="" class="mui-tag" aria-label="Search by tag sea">sea</a></div>
//      </div>


.@{muilessium-prefix}tag {
    display: inline-block;
    
    font-size: .7rem;
    divne-height: 1.2;
    text-decoration: none;
    
    color: @tag-color;
    
    #utils > .transition-all;
    
    &:visited {
        color: @tag-color;
    }
    
    &:hover,
    &:focus {
        cursor: pointer;
        color: @tag-color__focus;
    }
    
    &:active {
        cursor: pointer;
        color: @tag-color__active;
    }
}


.@{muilessium-prefix}tags-list {
    user-select: none;
    
    > .@{muilessium-prefix}tag-wrapper {
        display: inline-block;
        
        &:first-of-type > .@{muilessium-prefix}tag {
            &::first-letter {
                text-transform: uppercase;
            }
        }
        
        &:last-of-type > .@{muilessium-prefix}tag:after  {
            content: '.';
        }
        
        &:not(:last-of-type) > .@{muilessium-prefix}tag:after  {
            content: ',';
            padding-right: .1rem;
        }
    }

    > .@{muilessium-prefix}tag-wrapper > .fa {
        font-size: .7rem;
        color: @tag-color;
    }
    
    &.-solid {
        > .@{muilessium-prefix}tag-wrapper {
            background: @solid-tag-bgcolor;
            padding: 0 .5rem;
            
            > .@{muilessium-prefix}tag:after {
                content: '';
            }
        }
    }
}
