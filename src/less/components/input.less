// @name Input
// @description Input component
//
// @state -valid      - Input value is valid
// @state -invalid    - Input value is invalid
//
// @see input-wrapper, input-label
//
// @markup
//      <div class="mui-input">
//          <input id="text-nqcl" type="text" placeholder="Input">
//      </div>


// @name Input with label
// @description Input coponent with label
//
// @see input
//
// @markup
//      <div class="mui-input-wrapper">
//          <label for="text-c2cf" class="mui-input-label">Username</label>
//          <div class="mui-input">
//              <input type="text" id="text-c2cf" placeholder="Input with label">
//          </div>
//      </div>


// @name Input with icon
// @description Input component with icon
// @requires FontAwesome
//
// @state -icon-left  - Input with icon on the left side
// @state -icon-right - Input with icon on the right side
//
// @lvar input-icon-color   - white
// @lvar input-icon-bgcolor - primary-color
//
// @see input
//
// @markup
//      <div class="mui-input docs-remove-default-example">
//          <input type="text" id="text-wlv2" placeholder="Input with icon">
//          <label class="icon" for="text-wlv2"><i class="fa fa-user"></i></label>
//      </div>


// @name Material input
// @description Input component (material-style variation)
//
// @state -has-value  - Input has value
//
// @see input
//
// @markup
//      <div class="mui-input -material">
//          <input id="text-phg8" type="text">
//          <label for="text-phg8">First name</label>
//      </div>


.@{muilessium-prefix}input {
    position: relative;
    
    height: @input-height;
    width: 100%;
    
    border: @input-border-width solid @input-color;
    border-radius: @input-border-radius;
    overflow: hidden;
    
    background: @input-bgcolor;
    
    &:hover {
        cursor: pointer;
    }
    
    > input {
        height: ~'calc(' @input-height ~' - ' 2 * @input-border-width ~')';
        width: 100%;
        
        padding: 0 1rem;
        
        line-height: ~'calc(' @input-height ~' - ' 2 * @input-border-width ~')';
        
        color: @input-color;
        background: transparent;
        
        outline: none;
        overflow: hidden;
        border: none;

        &::placeholder {
            color: @input-placeholder-color;
            text-indent: 0;
            opacity: 1;
            
            #utils > .transition-all;
        }

    }
    
    &.-focused {
        > input {
            color: @input-color__focus;

            &::placeholder {
                opacity: 0;
            }
        }
    }

    &.-icon-left {
        // This background is fix for chrome 1px bug
        background: linear-gradient(to right,
            @input-icon-bgcolor,
            @input-icon-bgcolor @input-height,
            @input-bgcolor @input-height,
            @input-bgcolor 100%);

        > input {
            text-indent: @input-height;
            
            &::placeholder {
                text-indent: @input-height;
            }
        }
        
        > .icon {
            position: absolute;
            left: 0;
            top: 0;
            z-index: 1;
            
            width: @input-height;

            font-size: @input-height * .5;
            line-height: @input-height;
            text-align: center;
            
            color: @input-icon-color;
            background: @input-icon-bgcolor;

            border-radius: @input-border-radius;
            
            &:hover {
                cursor: pointer;
            }
        }
    }
    
    &.-icon-right {
        // This background is fix for chrome 1px bug
        // TODO: Fix calc bug on hover in IE11
        background: linear-gradient(to right,
            @input-bgcolor,
            @input-bgcolor ~'calc(100% - ' @input-height ~')',
            @input-icon-bgcolor @input-height,
            @input-icon-bgcolor 100%);
        
        > .icon {
            position: absolute;
            right: 0;
            top: 0;
            
            width: @input-height;
            
            font-size: @input-height * .5;
            line-height: @input-height;
            text-align: center;
            
            color: @input-icon-color;
            background: @input-icon-bgcolor;
 
            border-radius: @input-border-radius;

            &:hover {
                cursor: pointer;
            }
        }
    }
    
    &.-material {
        margin-top: 1rem;
        
        border-top: none;
        border-left: none;
        border-right: none;
        border-radius: 0;
        overflow: visible;
        
        &.-focused > label {
            top: -.7rem;
            font-size: .7rem;
            
            color: @input-placeholder-color;
        }
        
        > label {
            display: block;
            
            position: absolute;
            left: 1rem;
            top: 50%;
            transform: translateY(-50%);
            
            font-size: 1rem;
            
            color: @input-color;
            
            #utils > .transition-all;
            
            &:hover {
                cursor: text;
            }
        }
    }
    
    &.-material.-has-value {
        > label {
            top: -.7rem;
            font-size: .7rem;
            
            color: @input-placeholder-color;
        }
    }
    
    &.-valid {
        border-color: @input-color__valid;
        
        > input::placeholder {
            color: @input-color__valid;
        }
    }
    
    &.-invalid {
        border-color: @input-color__invalid;
        
        > input::placeholder {
            color: @input-color__invalid;
        }
    }
}


.@{muilessium-prefix}input-label {
    display: block;

    margin-bottom: .7rem;

    font-weight: 600;
    font-size: 1rem;
    
    color: @input-label-color;
}


.@{muilessium-prefix}input-wrapper {
    
}

